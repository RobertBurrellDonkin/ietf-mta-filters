Proposal: Allow Relative URLs

Use Cases: Local Lists

Relative URLs are a reasonable metaphor for resources private 
to the engine running the script. This allows:

1. the choice of storage protocol to be transparent to the user
2. scripts accessing local resources to be portable

The "/" metaphor is suggested for shared resources:

1. Shared Blacklist

Example:

 if list: "/blacklist" {
   reject;
 }

2. Shared Distribution List

 redirect list: "/staff"

Use Case Three: Private User Specific Lists 

 if list: "MyFriends" {
   keep;
 }

This is really just neat syntactic sugar. 

--------------------------------------------------------------------------
[1] Proposed Insertion 
--------------------------------------------------------------------------

2.4.  Syntax of an externally stored list name

   A name of an externally stored list MUST be an URI [URI].

2.4.1 Relative URIs

   A relative URI MAY be interpreted by a Sieve engine as a reference to
   a transparent list resource managed by the engine. A engine which does
   not support relative URIs SHOULD raise an error at compile time when 
   this situation arises.
  
2.4.2 Absolute URIs

   An absolute URI indicates an external list processing resource.
   Implementations might find URLs such as [LDAP], [CardDAV], or
[etc, continuing as per original]

--------------------------------------------------------------------------
[2] Original Text
--------------------------------------------------------------------------

2.4.  Syntax of an externally stored list name

   A name of an externally stored list is always an absolute URI [URI].
   Implementations might find URLs such as [LDAP], [CardDAV], or
   [TAG-URI] to be useful for naming external lists.

   The "tag" URI scheme [TAG-URI] can be used to represent opaque, but
   user friendlier identifiers.  Resolution of such identifiers is going
   to be implementation specific and it can help in hiding the
   complexity of an implementation from end users.  For example, an
   implementation can provide a web interface for managing lists of
   users stored in LDAP.  Requiring users to know generic LDAP URL
   syntax might not be very practical, due to its complexity.  An
   implementation can instead use a fixed tag URI prefix such as "tag:
   example.com,<date>:" (where <date> can be, for example, a date
   generated once on installation of the web interface and left
   untouched upon upgrades) and the prefix doesn't even need to be shown
   to end users.

